#!/bin/bash
set -eou pipefail

function retback {
  popd > /dev/null
}
trap retback EXIT

pushd `dirname $0` > /dev/null

UBT_PACKAGE_NAME_2G="exagear-mem2g_*-1_armhf.deb"
UBT_PACKAGE_NAME_3G="exagear_*-1_armhf.deb"
UBT_PACKAGE_NAME_LEGACY_2G="exagear-legacy-mem2g_*-1_armhf.deb"
UBT_PACKAGE_NAME_LEGACY_3G="exagear-legacy_*-1_armhf.deb"
UBT_PACKAGE_NAME_ARM7_8="exagear-armv8_*-1_arm64.deb"

GUEST_IMAGE_PACKAGE_NAME_DEBIAN_7="exagear-guest-debian-7_*_all.deb"
GUEST_IMAGE_PACKAGE_NAME_DEBIAN_7_WINE2G="exagear-guest-debian-7-wine2g_*_all.deb"
GUEST_IMAGE_PACKAGE_NAME_DEBIAN_8="exagear-guest-debian-8_*_all.deb"
GUEST_IMAGE_PACKAGE_NAME_UBUNTU_1204="exagear-guest-ubuntu-1204lts_*_all.deb"
GUEST_IMAGE_PACKAGE_NAME_UBUNTU_1404="exagear-guest-ubuntu-1404lts_*_all.deb"
GUEST_IMAGE_PACKAGE_NAME_UBUNTU_1504="exagear-guest-ubuntu-1504_*_all.deb"
GUEST_IMAGE_PACKAGE_NAME_UBUNTU_1604="exagear-guest-ubuntu-1604_*_all.deb"

PK_FILE_NAME="pk-*.key"

function file_exists {
  stat $1 &> /dev/null
}

function get_host_system_type {
  HOST_OS=$(cat /etc/lsb-release 2>/dev/null | egrep "^DISTRIB_ID\=" | awk -F= '{print $2}' |  tr '[:upper:]' '[:lower:]')
  if [ -n "$HOST_OS" ]; then
    return
  fi

  HOST_OS=$(cat /etc/os-release | egrep "^ID\=" | awk -F= '{print $2}' |  tr '[:upper:]' '[:lower:]')
  if [ -n "$HOST_OS" ]; then
    if [ "$HOST_OS" == "debian" -o "$HOST_OS" == "ubuntu" ] ; then
        return
    fi
  fi

  HOST_OS=$(cat /etc/os-release | egrep "^ID_LIKE\=" | awk -F= '{print $2}' |  tr '[:upper:]' '[:lower:]')
  if [ -n "$HOST_OS" ]; then
    return
  fiÂ¬

  if [[ ! -z $HOST_OS ]]; then
    $HOST_OS="default"
  fi
}

function get_host_system_version {
  if [ "$HOST_OS" == "debian"  ] ; then
    HOST_OS_VERSION=`cat /etc/*-release | egrep "^VERSION_ID\=" | awk -F= '{print $2}' | tr '[:upper:]' '[:lower:]' | tr -d "\"" `
    if [ -z "$HOST_OS_VERSION" ] ; then
      if grep "jessie" /etc/*-release; then
    HOST_OS_VERSION="8"
      fi
  fi

  elif [ "$HOST_OS" == "ubuntu" ] ; then
    HOST_OS_VERSION=`cat /etc/*-release | egrep "^DISTRIB_RELEASE\=" | awk -F= '{print $2}' |  awk -F. '{print $1}' | tr '[:upper:]' '[:lower:]'`
  fi

  if [ -z "$HOST_OS_VERSION" ] ; then
    HOST_OS_VERSION="default"
  fi
}

function get_arch {
  #ARCH=`arch`
  ARCH="armv7l"       # Arch Linux
  echo "ARCH=$ARCH"
}

function check_guest_image_already_installed {
  INSTALLED_GUEST_IMAGE=$(ls /opt/exagear/images/ | head -n 1)

  if [ ! -z "$INSTALLED_GUEST_IMAGE" ]; then
    echo "It is not possible to install guest image package as you already have guest image package installed."
    echo "Installed guest image package name is exagear-guest-$INSTALLED_GUEST_IMAGE. "
    echo "To uninstall current guest image package use ' sudo apt-get purge exagear-guest-$INSTALLED_GUEST_IMAGE '"
    echo "Note that all x86 applications installed inside the current guest image will be also deleted."
    exit 1
  fi
}

function check_free_space {
  FREE_SPACE_MB=`df -m /opt/ | awk 'NR==2 {print $4}'`
  INSTALL_BLOCKDEV=`df -m /opt/ | awk 'NR==2 {print $1}'`
  if [ $FREE_SPACE_MB -lt 1500 ]; then
    echo "No enough space on your $INSTALL_BLOCKDEV file system. 1500M is required for exagear. You got only ${FREE_SPACE_MB}M. Please perform some cleanup or resize partitin"
    exit 1
  fi
}

if [ ! -z "$1" ] && [ "$1" != "ubuntu-1404" ] ; then
    echo "Invalid argument: $1"
    exit 1
fi

uid=$(id -u)
if [ "$uid" != "0" ] ; then
  echo "Must be root"
  exit 1
fi

test_binary=$(mktemp)
echo f0VMRgEBAQAAAAAAAAAAAAIAKAABAAAAVIAAADQAAADIAAAAAAIABTQAIAABACgABgADAAEAAAAAAAAAAIAAAACAAACAAAAAgAAAAAUAAAAAgAAACgKg4wEaoOMAIKDjMjCg48BwoOMAAADvCgJQ4wAAoAMBAKATAXCg4wAA
chmod +x $test_binary
$test_binary
test_bin_ret=$?
rm -f $test_binary

if [ "$test_bin_ret" -eq  '0' ]; then
  is_3g="1"
  echo "System memory configuration is determined as 3g/1g"
else
  is_3g="0"
  echo "System memory configuration is determined as 2g/2g"
fi

get_host_system_type
get_host_system_version
get_arch
check_guest_image_already_installed
check_free_space

echo "HOST OS: $HOST_OS"
echo "HOST OS VERSION: $HOST_OS_VERSION"
echo "EXAGEAR package: $UBT_PACKAGE_NAME"
echo "EXAGEAR guest image package: '$GUEST_IMAGE_PACKAGE_NAME'"

if ! file_exists "$PK_FILE_NAME" ; then
  echo "Put a primary key file to the current directory."
  echo "Primary key files are named ${PK_FILE_NAME/\*/NNNNNN}"
  exit 1
fi

echo "HOST OS: $HOST_OS"
echo "HOST OS VERSION: $HOST_OS_VERSION"
echo "EXAGEAR package: $UBT_PACKAGE_NAME"
echo "EXAGEAR guest image package: '$GUEST_IMAGE_PACKAGE_NAME'"

echo "Installing the binary translator..."
dpkg -i $UBT_PACKAGE_NAME || exit 1

echo "Installing the guest image..."
dpkg -i $GUEST_IMAGE_PACKAGE_NAME || exit 1

echo "Installing the primary key..."
mv $PK_FILE_NAME /opt/exagear/lic/ || exit 1

echo "Activating the copy of ExaGear..."
/opt/exagear/bin/actool || exit 1

echo "Done!"

